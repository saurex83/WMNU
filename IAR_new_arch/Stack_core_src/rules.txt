# Применение ASSERT
Определены в файле debug.h
ASSERT - "Утверждаю". Служат для обнаружения ошибок 
программирования. К ошибкам программирования относятся:
выход за граници массива, выбор неверного временного слота,
выбор неверного частотного канала, неверные агрументы 
функции, неверный результат..и т.д.
Не стоит путать с ошибками "ввода внешних данных", 
к примеру с некорректно принятым пакетом или неверным
номером порта. ASSERT воспринимать как ПИЗДЕЦ!
К примеру ASSERT ( time < 32768) читать как "ПИЗДЕЦ если 
время меньше 32768".
Модулях выделения ресурсов(слотов памяти) не должен 
приводить к ASSERT, он возвращает ошибку или NULL и 
только функция запросившая выделения памяти проверяет
ASSERT. Тогда будет понятно при оладке где происходит ошибка.
ASSERT приводит к CORE_FAULT и выводу сообщения если включенна
отладка.

#Применение HALT 
Аналогично ASSERT, только без проверки условия.
Пример HALT("Memory allocation fault.").
Приводит к CORE_FAULT.

#Применение exceptions
Реализованная версия TRY, CATCH, FINALLY работает только
в рамках одного файла, нет сквозной обработки во всей 
программе. Предназначена для улучшения качества и читаемости
кода посредством разнесения алгорима и обработчиков исключения.
Не путать исключения и ошибки, это не одно и тоже.
Пример исключения - timeout при приеме пакета. Это же 
не ошибка, но цикл приема нужно завершить с отстановкой радио.

