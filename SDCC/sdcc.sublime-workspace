{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"FCh",
				"FChain_s\tabc"
			],
			[
				"FI_get",
				"FI_getType\t(Fitem.c)"
			],
			[
				"FI_set",
				"FI_setLast\tabc"
			],
			[
				"ite",
				"item_iter\tabc"
			],
			[
				"FI_s",
				"FI_setNext\t(Fitem.c)"
			],
			[
				"it",
				"iterator\tabc"
			],
			[
				"i",
				"iterator\tabc"
			],
			[
				"FIt",
				"FItem_s\tabc"
			],
			[
				"FI",
				"FItem_s\tabc"
			],
			[
				"F",
				"FItem\t(Fitem.c)"
			],
			[
				"std",
				"stdint.h\t(utest_suite.h)"
			],
			[
				"inc",
				"include\t(utest_suite.c)"
			],
			[
				"cre",
				"create_test\tabc"
			],
			[
				"are",
				"area2\tabc"
			],
			[
				"area",
				"area1\tabc"
			],
			[
				"si",
				"size\tabc"
			],
			[
				"le",
				"part_len"
			],
			[
				"u",
				"umsg\tabc"
			],
			[
				"part",
				"part_data\tabc"
			],
			[
				"FP",
				"FP_delete\t(framepart.c)"
			],
			[
				"ut",
				"utest_suite.h\t(utest.c)"
			],
			[
				"um",
				"umsg_line\t(utest_suite.c)"
			],
			[
				"umsg",
				"umsg_summary\t(utest_suite.c)"
			],
			[
				"me",
				"memory_ok\tabc"
			],
			[
				"siz",
				"size_t\tabc"
			],
			[
				"A",
				"ASSERT_ENABLE\tabc"
			],
			[
				"n",
				"nwdebuger.h\t(utest.c)"
			],
			[
				"fr",
				"framepart.h\t(framepart.c)"
			],
			[
				"fp",
				"fp_next\tabc"
			],
			[
				"la",
				"last\tabc"
			],
			[
				"ne",
				"next\tabc"
			],
			[
				"las",
				"last_neighbor\tabc"
			],
			[
				"pa",
				"part_len\tabc"
			],
			[
				"ma",
				"malloc\tabc"
			],
			[
				"part_",
				"part_len\tabc"
			],
			[
				"en",
				"endif\t(makefile)"
			],
			[
				"I",
				"INCLUDES\tabc"
			],
			[
				"nw",
				"nwdebug\t(makefile)"
			],
			[
				"__",
				"__VA_ARGS__\tabc"
			],
			[
				"uin",
				"uint8_t\tabc"
			],
			[
				"DM",
				"DMA1_Channel1"
			],
			[
				"max",
				"maxAdc"
			],
			[
				"ui",
				"uint16_t"
			],
			[
				"D",
				"DISABLE"
			],
			[
				"uint",
				"uint16_t"
			],
			[
				"AIN",
				"AIN1"
			],
			[
				"de",
				"define"
			],
			[
				"st",
				"static"
			],
			[
				"sp",
				"spacket"
			],
			[
				"va",
				"val_array\t(data_packet.h)"
			],
			[
				"ad",
				"adc_ref_val\t(data_packet.h)"
			],
			[
				"spa",
				"spacket"
			],
			[
				"da",
				"data_packet.h\t(data_packet.c)"
			],
			[
				"ADC_I",
				"ADC_InitStructure"
			],
			[
				"ADC",
				"ADC1"
			],
			[
				"hal_u",
				"hal_uart_dbg.h\t(hal.c)"
			],
			[
				"hal_",
				"hal_ok"
			],
			[
				"GPIO",
				"GPIO_Pin"
			],
			[
				"hal",
				"hal.h\t(main.c)"
			],
			[
				"re",
				"return"
			],
			[
				"no",
				"no_problems"
			],
			[
				"te",
				"test_func"
			],
			[
				"str",
				"struct\tstruct"
			],
			[
				"ker",
				"kernel.h\t(core_event_handlers.c)"
			],
			[
				"x2",
				"x2_val"
			],
			[
				"tas",
				"tasks"
			],
			[
				"keve",
				"k_event"
			],
			[
				"ha",
				"handler\t(kernel.h)"
			],
			[
				"task",
				"task_num"
			],
			[
				"core_event_",
				"core_event_manager.h\t(main.c)"
			],
			[
				"so",
				"sort_task"
			],
			[
				"ts",
				"task"
			],
			[
				"core",
				"core_task"
			],
			[
				"pr",
				"prior\t(kernel.h)"
			],
			[
				"ta",
				"task_hndl\t(kernel.h)"
			],
			[
				"k",
				"kcodes"
			],
			[
				"core_eve",
				"core_event_manager.h\t(core_event_manager.c)"
			],
			[
				"in",
				"include"
			],
			[
				"OP",
				"OPT"
			],
			[
				"e",
				"ev"
			],
			[
				"p",
				"priority"
			],
			[
				"k_",
				"k_event"
			],
			[
				"is",
				"is_hndl_in_list"
			],
			[
				"h",
				"hndl"
			],
			[
				"eve",
				"event_query"
			],
			[
				"q",
				"query"
			],
			[
				"ev",
				"event_query"
			],
			[
				"s",
				"static"
			],
			[
				"core_set",
				"core_set_lse"
			],
			[
				"core_",
				"core_idle\t(main.c)"
			],
			[
				"SYS",
				"SYSTICK_FREQ\t(kernel_configuration.h)"
			],
			[
				"sd",
				"stdint.h\t(kernel.h)"
			],
			[
				"make",
				"makefile"
			],
			[
				"c",
				"cmsis"
			],
			[
				"M",
				"MAKEFILE_INC"
			],
			[
				"main",
				"main.o\t(makefile)"
			],
			[
				"CC",
				"CCFLAGS"
			],
			[
				"OB",
				"OBJ"
			],
			[
				"start",
				"startup_stm32l1xx_md.s\t(makefile)"
			],
			[
				"MA",
				"makefile"
			],
			[
				"mi",
				"misc.h\t(misc.c)"
			],
			[
				"a",
				"A"
			],
			[
				"for",
				"format\tfunction"
			],
			[
				"_",
				"__name__"
			],
			[
				"lo",
				"log2\tstatement"
			],
			[
				"l",
				"logging"
			],
			[
				"log",
				"logging"
			],
			[
				"t",
				"set_trace\tfunction"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include \"FChain.h\"\n#include \"nwdebuger.h\"\n#include \"stdlib.h\"\n#include \"string.h\"\n\nstatic uint8_t QUANTITY = 0; // Подсчет обьектов\n\nFChain_s* FC_create(void);\nbool FC_delete(FChain_s* fc);\nvoid FC_iteratorToHead(FChain_s* fc);\nvoid FC_iteratorToTail(FChain_s* fc);\nbool FC_iteratorToType(FChain_s* fc, FItem_t type);\nbool FC_iteratorToTypeHead(FChain_s* fc, FItem_t type);\nbool FC_next(FChain_s* fc);\nbool FC_last(FChain_s* fc);\nvoid FC_insertAfter(FChain_s* fc, FItem_s* fi);\nvoid FC_insertBefore(FChain_s* fc, FItem_s* fi);\nuint8_t FC_getQuantity(FChain_s* fc);\nFItem_s* FC_getIterator(FChain_s* fc);\nuint8_t FC_getObjectQuantity();\nbool FC_isHaveType(FChain_s* fc, FItem_t type);\n\nFChain_s* FC_create(void)\n{\n\tFChain_s* fc = (FChain_s*)malloc(sizeof(FChain_s));\n\n\tASSERT_HALT(fc != NULL, \"Memory allocation fails\");\n\tfc->  \n\tif (fc == NULL)\n\t\treturn NULL;\n\n\tfc->head = NULL;\n\tfc->tail = NULL;\n\tfc->quantity = 0;\n\tfc->iterator = NULL;\n\tQUANTITY++;\n\treturn fc;\n}\n\nbool FC_delete(FChain_s* fc)\n{\n\tASSERT_HALT(fc != NULL, \"Cant delete NULL FChain\");\n\t\n\tif (fc == NULL)\n\t\treturn false;\n\n\tFItem_s* next = NULL;\n\tFItem_s* item = fc->head;\n\n// Удаляем все элементы цепочки\n\twhile (item != NULL)\n\t{\n\t\tnext = FI_getNext(item);\n\t\tFI_delete(item);\n\t\titem = next;\n        fc->quantity--;\n\t}\n\n\tfree(fc);\n    \n\treturn true;\n}\n\nvoid FC_iteratorToHead(FChain_s* fc)\n{\n\tfc->iterator = fc->head;\n}\n\nvoid FC_iteratorToTail(FChain_s* fc)\n{\n\tfc->iterator = fc->tail;\n}\n\nbool FC_iteratorToType(FChain_s* fc, FItem_t type)\n{\n\tASSERT_HALT(fc != NULL, \"Cant iterate NULL FChain\");\n\n\tFItem_s* new_iterator = fc->iterator;\n\n\t// Итератор может ни на что не указывать\n\tif (new_iterator == NULL)\n\t\treturn false;\n\n\twhile(true)\n\t{\n\t\tif (FI_getType(new_iterator) == type)\n\t\t{\n\t\t\tfc->iterator = new_iterator;\n\t\t\treturn true;\n\t\t}\n\n\t\tnew_iterator = FI_getNext(new_iterator);\n\n\t\t// Возможно дошли до конца\n\t\tif (new_iterator == NULL)\n\t\t\treturn false;\n\t}\n}\n\nbool FC_iteratorToTypeHead(FChain_s* fc, FItem_t type)\n{\n\tASSERT_HALT(fc != NULL, \"Cant iterate NULL FChain\");\n\n\t// Сохраним предыдущее состояние итератора\n\tFItem_s* old_iterator = fc->iterator;\t\n\t// Установим итератор на начало цепочки\n\tfc->iterator = fc->head;\n\tbool res = FC_iteratorToType(fc, type);\n\n\tif (!res)\n\t{\n\t\tfc->iterator = old_iterator;\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nbool FC_next(FChain_s* fc)\n{\n\tASSERT_HALT(fc != NULL, \"Cant get next NULL FChain\");\n\tif (fc->iterator == NULL)\n      return false;\n\n    FItem_s* next = FI_getNext(fc->iterator);\n    // Итерируем до последнего элемента\n    if ( next == NULL)\n        return false;\n    \n    fc->iterator = next;\n    return true;\n}\n\nbool FC_last(FChain_s* fc)\n{\n\tASSERT_HALT(fc != NULL, \"Cant get last NULL FChain\");\n\tif (fc->iterator == NULL)\n\t\treturn false;\n    \n    FItem_s* last = FI_getLast(fc->iterator);\n    \n    if ( last == NULL)\n        return false;\n    \n    fc->iterator = last;\n    return true;\n}\n\nvoid FC_insertAfter(FChain_s* fc, FItem_s* fi)\n{\n\tASSERT_HALT(fc != NULL, \"Cant insert NULL FChain\");\n\tASSERT_HALT(fi != NULL, \"Cant insert NULL FItem\");\n    // Если цепочка пустая то итератор указывается на NULL.\n    // В этом случаи вставляем первый элемент.\n    if (fc->quantity == 0)\n    {\n      fc->head = fi;\n      fc->tail = fi;\n      fc->iterator = fc->head;\n      fi->last = NULL;\n      fi->next = NULL;\n      fc->quantity++;\n      return;\n    }\n    \n\tASSERT_HALT(fc->iterator != NULL, \"Cant insert NULL iterator\\n\");\n\n\tFItem_s* item_iter = fc->iterator; \n\tFItem_s* item_next = FI_getNext(item_iter);\n\n\t// К текущем итератору привязываем новый элемент\n\tFI_setNext(item_iter, fi);\n\tFI_setLast(fi, item_iter);\n\n\t// Если была вставка, то перепривяжем следующий элемент\n\tif (item_next != NULL)\n\t{\n\t\tFI_setLast(item_next, fi);\n\t\tFI_setNext(fi, item_next);\n\t}\n    else\n    {\n      // Если вставили последний элемент, установим хвост.\n      fc->tail = fi;\n    }\n\t\n\tfc->quantity++;\n}\n\nvoid FC_insertBefore(FChain_s* fc, FItem_s* fi)\n{\n\tASSERT_HALT(fc != NULL, \"Cant insert NULL FChain\");\n\tASSERT_HALT(fi != NULL, \"Cant insert NULL FItem\");\n\n    // Если цепочка пустая то итератор указывается на NULL.\n    // В этом случаи вставляем первый элемент.\n    if (fc->quantity == 0)\n    {\n      fc->head = fi;\n      fc->tail = fi;\n      fc->iterator = fc->head;\n      fi->last = NULL;\n      fi->next = NULL;\n      fc->quantity++;\n      return;\n    }\n\n\tASSERT_HALT(fc->iterator != NULL, \"Cant insert NULL iterator\");\n\n\tFItem_s* item_iter = fc->iterator; \n\tFItem_s* item_last = FI_getLast(item_iter);\n\n\t// К текущем итератору привязываем новый элемент\n\tFI_setLast(item_iter, fi);\n\tFI_setNext(fi, item_iter);\n\n\t// Если была вставка, то перепривяжим следующий элемент\n\tif (item_last != NULL)\n\t{\n\t\tFI_setNext(item_last, fi);\n\t\tFI_setLast(fi, item_last);\n\t}\n        else\n    {\n      // Если вставили первый элемент, установим голову.\n      fc->head = fi;\n    }\n\t\n\tfc->quantity++;\n}\n\nuint8_t FC_getQuantity(FChain_s* fc)\n{\n\tASSERT_HALT(fc != NULL, \"Cant get quantity NULL FChain\");\n\treturn fc->quantity;\n}\n\nFItem_s* FC_getIterator(FChain_s* fc)\n{\n\tASSERT_HALT(fc != NULL, \"Cant get iterator NULL FChain\");\n\treturn fc->iterator;\n}\n\nuint8_t FC_getObjectQuantity()\n{\n\treturn QUANTITY;\n}\n\nbool FC_isHaveType(FChain_s* fc, FItem_t type)\n{\n  \tASSERT_HALT(fc != NULL, \"Cant iterate NULL FChain\");\n\n\t// Сохраним предыдущее состояние итератора\n\tFItem_s* old_iterator = fc->iterator;\t\n\t// Установим итератор на начало цепочки\n\tfc->iterator = fc->head;\n\tbool res = FC_iteratorToType(fc, type);\n    fc->iterator = old_iterator;\n    \n\tif (!res)\n      return false;\n\n\treturn true;\n}",
			"file": "core/FChain.c",
			"file_size": 6477,
			"file_write_time": 132155629241536112,
			"settings":
			{
				"buffer_size": 5556,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "core/FChain.h",
			"settings":
			{
				"buffer_size": 1275,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 32.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"mark ",
				"Markdown Preview: Preview in Browser"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"git",
				"Preferences: GitGutter Settings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ana",
				"Anaconda: Enable linting on this file"
			],
			[
				"anaconda: ",
				"Anaconda: Disable linting on this file"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Preferences: Package Control Settings – User"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 112.0,
		"history":
		[
			"git",
			"oleg(4)",
			"print (a)",
			"a=5",
			"print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"dh = hashlib.sha256(by).hexdigest()",
			" dh = hashlib.sha256(by).hexdigest()",
			"by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read()",
			"urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) )",
			"ipp = sublime.installed_packages_path()",
			"pf = 'Package Control.sublime-package'",
			"h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'",
			"import urllib.request,os,hashlib",
			"print ('oleg')",
			"print (oleg)",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"reboot",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/saurex83/Projects/WMNU/SDCC",
		"/home/saurex83/Projects/WMNU/SDCC/core",
		"/home/saurex83/Projects/WMNU/SDCC/tests"
	],
	"file_history":
	[
		"/home/saurex83/Projects/WMNU/SDCC/tests/utest_FChain.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/src/FChain.c",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/inc/FChain.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/inc/FItem.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/src/Fitem.c",
		"/home/saurex83/Projects/WMNU/neocore/src/apps/tests/utest.c",
		"/home/saurex83/Projects/tmp_vmware_delite/script",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/inc/framepart.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/src/framepart.c",
		"/home/saurex83/Projects/WMNU/neocore/src/apps/tests/nwstack/utest_suite.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/src/FChain.h",
		"/home/saurex83/Projects/WMNU/neocore/src/apps/tests/nwstack/utest_suite.c",
		"/home/saurex83/Projects/WMNU/neocore/src/apps/tests/nwstack/utest_framepart.c",
		"/home/saurex83/Projects/WMNU/neocore/src/nwstack/src/Fitem.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwdebuger/nwdebuger.c",
		"/home/saurex83/Projects/WMNU/neocore/src/nwdebuger/nwdebuger.h",
		"/home/saurex83/Projects/WMNU/neocore/src/apps/tests/nwstack/utest_framepart.h",
		"/home/saurex83/Projects/WMNU/neocore/src/makefile",
		"/home/saurex83/Projects/WMNU/neocore/src/apps/tests/makefile",
		"/home/saurex83/Projects/WMNU/neocore/src/platform/newlib/print_stubs.c",
		"/home/saurex83/Projects/WMNU/neocore/src/nwdebuger/sig_trace.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwdebuger/sig_trace_defs.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwdebuger/active_logs.h",
		"/home/saurex83/Projects/WMNU/neocore/src/nwdebuger/printf.h",
		"/home/saurex83/Projects/Current_mitter_hw/stdperiph/src/stm32l1xx_adc.c",
		"/home/saurex83/Projects/Current_mitter_hw/docs/prog and debug.md",
		"/home/saurex83/Projects/Current_mitter_hw/src/hal/hal_adc.c",
		"/home/saurex83/Projects/Current_mitter_hw/src/kernel/common_conf.h",
		"/etc/minidlna.conf",
		"/home/saurex83/Projects/Current_mitter_hw/src/kernel/main.c",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/inc/stm32l1xx_dma.h",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/src/stm32l1xx_dma.c",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/inc/stm32l1xx_adc.h",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/src/stm32l1xx_adc.c",
		"/home/saurex/Projects/Current_mitter_hw/cmsis/stm32l1xx.h",
		"/home/saurex/Projects/Current_mitter_hw/src/kernel/makefile",
		"/home/saurex/Projects/Current_mitter_hw/src/hal/makefile",
		"/home/saurex/Projects/Current_mitter_hw/src/kernel/data_packet.c",
		"/home/saurex/Projects/Current_mitter_hw/inc/kernel/data_packet.h",
		"/home/saurex/Projects/Current_mitter_hw/inc/hal/hal_adc.h",
		"/home/saurex/Projects/Current_mitter_hw/src/hal/hal.c",
		"/home/saurex/Projects/Current_mitter_hw/inc/hal/hal_gpio.h",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/inc/misc.h",
		"/home/saurex/Projects/Current_mitter_hw/src/hal/hal_gpio.c",
		"/home/saurex/Projects/Current_mitter_hw/src/hal/hal_adc.c",
		"/home/saurex/Projects/Current_mitter_hw/src/hal/hal_uart_sys.c",
		"/home/saurex/.config/sublime-text-3/Packages/rsub/rsub.sublime-settings",
		"/run/user/1000/gvfs/smb-share:server=192.168.17.168,share=storage/Developments/Neocore/Cases/Node case tech req/Tech req for node.md",
		"/run/user/1000/gvfs/smb-share:server=192.168.17.168,share=storage/Developments/Neocore/Cases/изменения_узла.md",
		"/run/user/1000/gvfs/smb-share:server=192.168.17.168,share=storage/Developments/Neocore/dgLux/Installer/readme.md",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/src/stm32l1xx_gpio.c",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/inc/stm32l1xx_gpio.h",
		"/home/saurex/Projects/Current_mitter_hw/makefile",
		"/home/saurex/Projects/Current_mitter_hw/docs/prog and debug.md",
		"/home/saurex/Projects/Current_mitter_hw/inc/hal/hal_uart_sys.h",
		"/home/saurex/Projects/Current_mitter_hw/stdperiph/inc/stm32l1xx_rcc.h",
		"/run/user/1000/gvfs/smb-share:server=192.168.17.168,share=storage/Developments/Neocore/NeocoreCurrentMeter/шифро",
		"/home/saurex/Projects/Current_mitter_hw/src/kernel/common_conf.h",
		"/opt/dsa/dsa-server/bin/dglux_server.dart",
		"/opt/dsa/dsa-server/bin/daemon.dart",
		"/home/saurex/Документы/Current_mitter_hw/src/kernel/makefile",
		"/home/saurex/Документы/Current_mitter_hw/stdperiph/inc/stm32l1xx_adc.h",
		"/home/saurex/Документы/Current_mitter_hw/stdperiph/src/stm32l1xx_tim.c",
		"/home/saurex/Документы/Current_mitter_hw/stdperiph/inc/stm32l1xx_tim.h",
		"/home/saurex/Документы/Current_mitter_hw/stdperiph/src/stm32l1xx_adc.c",
		"/home/saurex/Документы/Current_mitter_hw/src/hal/hal_tim6.c",
		"/home/saurex/Документы/Current_mitter_hw/inc/hal/hal_adc.h",
		"/home/saurex/Документы/Current_mitter_hw/inc/hal/hal_tim6.h",
		"/home/saurex/Документы/Current_mitter_hw/docs/kernel.md",
		"/home/saurex/Документы/Current_mitter_hw/src/hal/makefile",
		"/home/saurex/Документы/Current_mitter_hw/src/hal/hal_uart_dbg.c",
		"/home/saurex/Документы/Current_mitter_hw/inc/hal/hal.h",
		"/home/saurex/Документы/Current_mitter_hw/src/hal/hal.c",
		"/home/saurex/Документы/Neos/docs/kernel.md",
		"/home/saurex/Документы/Current_mitter_hw/inc/hal/hal_uart_dbg.h",
		"/home/saurex/Документы/Current_mitter_hw/src/kernel/common_conf.h",
		"/home/saurex/Документы/Current_mitter_hw/inc/hal/hal_configuration.h",
		"/home/saurex/Документы/Neos/inc/kernel/kernel_panic.h",
		"/home/saurex/Документы/Neos/inc/kernel/kcodes.h",
		"/home/saurex/Документы/Neos/inc/kernel/kernel.h",
		"/home/saurex/Документы/Neos/src/kernel/core_unit_tests.c",
		"/home/saurex/Документы/Neos/src/hal/hal_lse.c",
		"/home/saurex/Документы/Neos/makefile",
		"/home/saurex/Документы/Neos/src/kernel/makefile",
		"/home/saurex/Документы/Neos/inc/kernel/kernel_configuration.h",
		"/home/saurex/Документы/Neos/src/kernel/main.c",
		"/home/saurex/Документы/Neos/inc/kernel/core_unit_tests.h",
		"/home/saurex/Документы/Neos/src/kernel/core_event_manager.c",
		"/home/saurex/Документы/Neos/src/kernel/core_event_handlers.c",
		"/home/saurex/Документы/Neos/src/kernel/core_task_manager.c",
		"/home/saurex/Документы/Neos/src/hal/hal_idle.c",
		"/home/saurex/Документы/Neos/src/kernel/kernel_panic.c",
		"/home/saurex/.vmware/preferences",
		"/run/user/1000/gvfs/smb-share:server=192.168.17.168,share=storage/Admin/common_ssh_access/access_to_server_via_ssh.md",
		"/etc/apt/sources.list",
		"/home/saurex/.gdbinit",
		"/home/saurex/Документы/Neos/src/app/sys",
		"/home/saurex/Документы/Neos/src/hal/hal.c",
		"/home/saurex/Документы/Neos/inc/kernel/core_event_manager.h",
		"/home/saurex/Документы/Neos/src/kernel/core_scheulder.c",
		"/home/saurex/Документы/Neos/src/hal/hal_sysclock.c",
		"/home/saurex/Документы/Neos/inc/kernel/kevents.h",
		"/home/saurex/Документы/Neos/inc/kernel/core_event_handlers.h",
		"/home/saurex/Документы/Neos/inc/hal/hal_sysclock.h",
		"/home/saurex/Документы/Neos/inc/hal/hal_lse.h",
		"/home/saurex/Документы/Neos/inc/hal/hal_idle.h",
		"/home/saurex/Документы/Neos/inc/hal/hal.h",
		"/home/saurex/Документы/Neos/inc/kernel/event_handlers_list.h",
		"/home/saurex/Документы/Neos/inc/kernel/core_task_manager.h",
		"/home/saurex/Документы/Neos/inc/kernel/core_listeners.h",
		"/home/saurex/Документы/Neos/inc/kernel/core_idle.h",
		"/home/saurex/Документы/Neos/inc/hal/hal_configuration.h",
		"/home/saurex/Документы/Neos/src/hal/makefile",
		"/home/saurex/Документы/Neos/src/kernel/core_systick.c",
		"/home/saurex/Документы/Neos/src/kernel/core_system.c",
		"/home/saurex/Документы/Neos/inc/hal/hal.c",
		"/home/saurex/Документы/Neos/src/kernel/core_idle.c",
		"/home/saurex/Документы/Neos/src/kernel/core_modules.c",
		"/home/saurex/Документы/Neos/src/kernel/core_listeners.c",
		"/run/user/1000/gvfs/smb-share",
		"/home/saurex/Документы/Neos/.gitignore",
		"/home/saurex/Документы/Neos/cmsis/core_cm0.h",
		"/home/saurex/Документы/Neos/stdperiph/inc/stm32l1xx_rcc.h",
		"/home/saurex/Документы/Neos/stdperiph/src/stm32l1xx_rcc.c",
		"/home/saurex/Документы/Neos/cmsis/stm32l1xx.h",
		"/home/saurex/Документы/Neos/cmsis/system_stm32l1xx.c",
		"/home/saurex/Документы/Neos/cmsis/makefile",
		"/home/saurex/Документы/Neos/stdperiph/src/makefile"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"TCIF",
			"DR",
			"DMA1_FLAG_TC",
			"ADC1",
			"ENABLE",
			"GPIO_Mode_AN",
			"invalidLicense",
			"license",
			"lecen",
			"none",
			"return",
			"licen",
			"period",
			"ext",
			"ADC_external_trigger_sources_for_regular_channels_conversion",
			"ADC_InitStructure",
			"start",
			"ADC_ExternalTrigConv_None",
			"trig",
			"ADCCLK",
			"RCC_ADCCLKConfig",
			"RCC_PCLK2_Div6",
			"                                     ",
			"void",
			"core_system_start",
			"-O0",
			".o",
			".c",
			"MEMORY\n{\n  rom : org = 0x08000000, l = 64K\n  ram : org = 0x20000000, l = 20K\n}\n\nSECTIONS\n{\n  .text : {\n    *(.text);\n  } > rom\n\n  .data : {\n    *(.data);\n  } > ram AT>rom = 0xff\n}",
			">>>"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"none",
			"core_set_sysclock",
			"-O2",
			".o = -O0",
			".o",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/home/saurex83/Projects/WMNU/SDCC"
		}
	],
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "core/FChain.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5556,
						"regions":
						{
						},
						"selection":
						[
							[
								767,
								767
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 222.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "core/FChain.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1275,
						"regions":
						{
						},
						"selection":
						[
							[
								724,
								724
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 172.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 129.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 396.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
