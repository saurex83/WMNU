###############################################################################
#
# IAR C/C++ Compiler V10.10.1.4655 for 8051               17/Jan/2020  17:10:54
# Copyright 2004-2017 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        \\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\src\main.c
#    Command line       =  
#        -f C:\Users\08A4~1\AppData\Local\Temp\EWD18D.tmp
#        ("\\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\src\main.c" -lcN
#        "\\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\List" -o
#        "\\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\Obj" -e --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data
#        --nr_virtual_regs 8 --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\8051\LIB\DLIB\dl8051Normal.h" -I
#        "\\vmware-host\Shared Folders\Projects\WMNU\IAR\SHARE_PRJ_SRC\" -On
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_cross_call)
#    Locale             =  Russian_Russia.1251
#    List file          =  
#        \\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\List\main.lst
#    Object file        =  
#        \\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\Obj\main.r51
#
###############################################################################

\\vmware-host\Shared Folders\Projects\WMNU\IAR\NeocoreGateway\src\main.c
      1          #include "manager.h"
      2          #include "nwdebuger.h"
      3          #include "ioCC2530.h"
      4          #include "stdint.h"
      5          
      6          // Собирать проект с ключем GATEWAY в файле basic.h
      7          void main(void)
      8          {
      9            bool con = MG_Connect();
     10           //bool con = true;
     11          //  CLKCONCMD &= ~(1<<7); // Сбрасываем бит OSC32K, будет выбран 32.768 кварц
     12          //  while (CLKCONSTA & (1<<7)); // Ждем пока бит не станет 0
     13          //
     14          //
     15          //  // Переходим на 32 Мгц
     16          //  CLKCONCMD = 0;// (1<<3);
     17          //  while (CLKCONSTA&(1<<6));
     18            
     19            
     20            com_uart_init();
     21            char buff[30];
     22            
     23            if (con)
     24            {
     25              LOG_ON("Network created\r\n");
     26            }  
     27            else
     28            {
     29              LOG_ON("Network creation failed\r\n");
     30            }
     31            
     32          //  uart_putchar('F');
     33            LOG_ON("Echo\r\n");
     34            while(1)
     35            {
     36          //    for (int i = 0; i < sizeof(buff); i++)
     37          //      buff[i] = uart_getchar();
     38          //    
     39          //    for (int i = 0; i < sizeof(buff); i++)
     40          //      uart_putchar(buff[i]);  
     41            };
     42          }

   Maximum stack usage in bytes:

   ISTACK Function
   ------ --------
      0   main
        0   -> MG_Connect
        0   -> com_uart_init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      10  main
       6  main::?relay

 
 10 bytes in segment BANKED_CODE
  6 bytes in segment BANK_RELAYS
 
  6 bytes of CODE     memory
 10 bytes of HUGECODE memory

Errors: none
Warnings: 2
