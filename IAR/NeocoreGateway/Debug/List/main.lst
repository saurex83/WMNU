###############################################################################
#
# IAR C/C++ Compiler V10.10.1.4655 for 8051               17/Jan/2020  20:04:00
# Copyright 2004-2017 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        \\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\src\main.c
#    Command line       =  
#        -f C:\Users\08A4~1\AppData\Local\Temp\EW4C3C.tmp
#        ("\\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\src\main.c" -lcN
#        "\\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\List" -o
#        "\\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\Obj" -e --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data
#        --nr_virtual_regs 8 --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\8051\LIB\DLIB\dl8051Normal.h" -I
#        "\\vmware-host\Shared Folders\Projects\WMNU\IAR\SHARE_PRJ_SRC\" -On
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_cross_call)
#    Locale             =  Russian_Russia.1251
#    List file          =  
#        \\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\List\main.lst
#    Object file        =  
#        \\vmware-host\Shared
#        Folders\Projects\WMNU\IAR\NeocoreGateway\Debug\Obj\main.r51
#
###############################################################################

\\vmware-host\Shared Folders\Projects\WMNU\IAR\NeocoreGateway\src\main.c
      1          #include "manager.h"
      2          #include "nwdebuger.h"
      3          #include "ioCC2530.h"
      4          #include "stdint.h"
      5          #include "uart_comm.h"
      6          
      7          // Собирать проект с ключем GATEWAY в файле basic.h
      8          void main(void)
      9          {
     10           // bool con = MG_Connect();
     11            bool con = true;
     12            CLKCONCMD &= ~(1<<7); // Сбрасываем бит OSC32K, будет выбран 32.768 кварц
     13            while (CLKCONSTA & (1<<7)); // Ждем пока бит не станет 0
     14            CLKCONCMD = 0;// (1<<3);
     15            while (CLKCONSTA&(1<<6));
     16            
     17            com_uart_init();
     18            
     19            char buff[30];
     20            
     21            if (con)
     22            {
     23              LOG_ON("Network created\r\n");
     24            }  
     25            else
     26            {
     27              LOG_ON("Network creation failed\r\n");
     28            }
     29           
     30            uint8_t* rcv;
     31            uint8_t sz;
     32            uart_putchar('F');
     33            LOG_ON("Echo\r\n");
     34            while(1)
     35            {
     36              
     37              rcv = uart_recv_cmd(&sz);
     38               
     39              for (int i = 0; i < sz; i++)
     40                uart_putchar(rcv[i]);  
     41            };
     42          }

   Maximum stack usage in bytes:

   XSTACK Function
   ------ --------
      1   main
        1   -> com_uart_init
        1   -> uart_putchar
        1   -> uart_recv_cmd


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  CLKCONCMD
       1  CLKCONSTA
     103  main
       6  main::?relay

 
 103 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
   2 bytes in segment SFR_AN
 
   6 bytes of CODE     memory
   0 bytes of DATA     memory (+ 2 bytes shared)
 103 bytes of HUGECODE memory

Errors: none
Warnings: 1
